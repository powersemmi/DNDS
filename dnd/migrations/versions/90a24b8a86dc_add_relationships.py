"""Add relationships

Revision ID: 90a24b8a86dc
Revises: e3808bcce6a3
Create Date: 2023-01-18 08:41:23.328829

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "90a24b8a86dc"
down_revision = "e3808bcce6a3"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gameset_pawns_position",
        sa.Column(
            "id", sa.BigInteger(), sa.Identity(always=True), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "gameset",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "id", sa.BigInteger(), sa.Identity(always=True), nullable=False
        ),
        sa.Column("owner_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_gameset_name"), "gameset", ["name"], unique=True)
    op.create_index(
        op.f("ix_gameset_owner_id"), "gameset", ["owner_id"], unique=False
    )
    op.create_table(
        "gamesets_meta",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["gameset.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_gamesets_meta_id"), "gamesets_meta", ["id"], unique=True
    )
    op.add_column(
        "maps", sa.Column("gameset_meta_id", sa.BigInteger(), nullable=False)
    )
    op.create_index(
        op.f("ix_maps_gameset_meta_id"),
        "maps",
        ["gameset_meta_id"],
        unique=True,
    )
    op.create_foreign_key(
        None, "maps", "gamesets_meta", ["gameset_meta_id"], ["id"]
    )
    op.add_column(
        "pawns", sa.Column("gameset_meta_id", sa.BigInteger(), nullable=False)
    )
    op.create_index(
        op.f("ix_pawns_gameset_meta_id"),
        "pawns",
        ["gameset_meta_id"],
        unique=True,
    )
    op.create_foreign_key(
        None, "pawns", "gamesets_meta", ["gameset_meta_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("pawns_user_id_fkey", "pawns", type_="foreignkey")
    op.drop_index(op.f("ix_pawns_gameset_meta_id"), table_name="pawns")
    op.drop_column("pawns", "gameset_meta_id")
    op.drop_constraint("maps_gameset_meta_id_fkey", "maps", type_="foreignkey")
    op.drop_index(op.f("ix_maps_gameset_meta_id"), table_name="maps")
    op.drop_column("maps", "gameset_meta_id")
    op.drop_index(op.f("ix_gamesets_meta_id"), table_name="gamesets_meta")
    op.drop_table("gamesets_meta")
    op.drop_index(op.f("ix_gameset_owner_id"), table_name="gameset")
    op.drop_index(op.f("ix_gameset_name"), table_name="gameset")
    op.drop_table("gameset")
    op.drop_table("gameset_pawns_position")
    # ### end Alembic commands ###
